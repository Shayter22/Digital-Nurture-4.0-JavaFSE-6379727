{"ast":null,"code":"var _jsxFileName = \"D:\\\\week7\\\\react_mandatory_project\\\\bloggerapp\\\\src\\\\components\\\\BookDetails.js\";\nimport React from 'react';\nimport { books } from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookDetails() {\n  // Using an element variable to hold the list, as suggested in the hint.\n  const bookList = /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: books.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: book.bname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: book.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)]\n    }, book.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), bookList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = BookDetails;\nexport default BookDetails;\nvar _c;\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"names":["React","books","jsxDEV","_jsxDEV","BookDetails","bookList","children","map","book","className","bname","fileName","_jsxFileName","lineNumber","columnNumber","price","id","_c","$RefreshReg$"],"sources":["D:/week7/react_mandatory_project/bloggerapp/src/components/BookDetails.js"],"sourcesContent":["import React from 'react';\r\nimport { books } from '../data';\r\n\r\nfunction BookDetails() {\r\n  // Using an element variable to hold the list, as suggested in the hint.\r\n  const bookList = (\r\n    <ul>\r\n      {books.map((book) => (\r\n        <div key={book.id} className=\"item\"> {/* Using keys is essential for lists in React [cite: 31] */}\r\n          <h3>{book.bname}</h3>\r\n          <h4>{book.price}</h4>\r\n        </div>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <div className=\"details-card\">\r\n      <h2>Book Details</h2>\r\n      {bookList}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookDetails;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,WAAWA,CAAA,EAAG;EACrB;EACA,MAAMC,QAAQ,gBACZF,OAAA;IAAAG,QAAA,EACGL,KAAK,CAACM,GAAG,CAAEC,IAAI,iBACdL,OAAA;MAAmBM,SAAS,EAAC,MAAM;MAAAH,QAAA,GAAC,GAAC,eACnCH,OAAA;QAAAG,QAAA,EAAKE,IAAI,CAACE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBX,OAAA;QAAAG,QAAA,EAAKE,IAAI,CAACO;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAFbN,IAAI,CAACQ,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CACL;EAED,oBACEX,OAAA;IAAKM,SAAS,EAAC,cAAc;IAAAH,QAAA,gBAC3BH,OAAA;MAAAG,QAAA,EAAI;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBT,QAAQ;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACG,EAAA,GAnBQb,WAAW;AAqBpB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}